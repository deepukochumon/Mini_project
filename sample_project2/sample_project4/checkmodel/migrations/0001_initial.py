# Generated by Django 4.0.1 on 2024-04-04 11:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='class_section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_id', models.CharField(max_length=7)),
                ('number_of_students', models.IntegerField()),
                ('sem', models.CharField(max_length=2)),
                ('dept_name', models.CharField(choices=[('cse', 'computer science and engieeering'), ('eee', 'electrical and electronics engineering'), ('ece', 'electronics and communication engineering')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_code', models.CharField(max_length=6)),
                ('c_name', models.CharField(max_length=20)),
                ('credit', models.IntegerField()),
                ('sem', models.IntegerField()),
                ('dept_name', models.CharField(choices=[('cse', 'computer science and engieeering'), ('eee', 'electrical and electronics engineering'), ('ece', 'electronics and communication engineering')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Course_diary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.IntegerField(null=True)),
                ('batches', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch', to='checkmodel.batch')),
            ],
        ),
        migrations.CreateModel(
            name='students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=20)),
                ('roll_no', models.IntegerField(default=1)),
                ('register_no', models.CharField(max_length=10)),
                ('batch_id', models.IntegerField()),
                ('sid', models.IntegerField()),
                ('batch_set', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='checkmodel.batch')),
                ('clas', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students_of_this', to='checkmodel.class_section')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='lab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_name', models.CharField(max_length=15)),
                ('course', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_session', to='checkmodel.course')),
            ],
        ),
        migrations.CreateModel(
            name='faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('fid', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='course_record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True)),
                ('date', models.DateField()),
                ('session_no', models.IntegerField()),
                ('attendance', models.BooleanField()),
                ('output', models.BooleanField()),
                ('exp_no', models.IntegerField(default=0)),
                ('exp_comp', models.IntegerField(default=0)),
                ('next_exp', models.IntegerField(default=0)),
                ('diary', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_diary', to='checkmodel.course_diary')),
            ],
        ),
        migrations.AddField(
            model_name='course_diary',
            name='facul_in',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_dia', to='checkmodel.faculty'),
        ),
        migrations.AddField(
            model_name='course_diary',
            name='lab_name',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diary', to='checkmodel.lab'),
        ),
        migrations.AddField(
            model_name='course',
            name='faculty',
            field=models.ManyToManyField(related_name='handling_course', to='checkmodel.faculty'),
        ),
        migrations.AddField(
            model_name='class_section',
            name='advisor',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='advising_class', to='checkmodel.faculty'),
        ),
        migrations.AddConstraint(
            model_name='course_record',
            constraint=models.CheckConstraint(check=models.Q(('attendance', True), ('output', False), _connector='OR'), name='student not present constrain'),
        ),
        migrations.AlterUniqueTogether(
            name='course_record',
            unique_together={('name', 'date')},
        ),
    ]
